grammar Skel1;

program: programPart+ ;

programPart: statement ';'       #MainStatement
           | OTHER {System.err.println("unknown char: " + $OTHER.text);}
 ;

statement: assignment
         ;

assignment: varName=IDENTIFIER '=' expr=patternExpr;

patternExpr: stream=stream
           | seq=sequence
           | dataParallel=dataParallel
           ;

stream : farm=farm
       | pipe=pipe
       ;

sequence  : sequence=sequence
          | comp=comp
          ;

dataParallel  : map=map
              ;


block : '(' expr=patternExpr ')' ;

sequence : 'Seq' '(' NUMBER ')';

comp : 'Comp' block;

pipe : 'Pipe' stages;

farm : 'Farm' block;

map : 'Map' block;

stages : OPAR (patt COMMA patt)+CPAR;

stages: '(' expr+=patternExpr  ',' expr+=patternExpr (',' expr+=patternExpr)* ')' ;

IDENTIFIER: [a-zA-Z][a-zA-Z0-9]* ;
NUMBER: [0-9]+;
WHITESPACE: [ \t\n\r]+ -> skip;